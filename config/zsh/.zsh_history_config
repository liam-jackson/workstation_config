#!/usr/bin/env zsh
# echo "entered .zsh_history_config"

# Save 100,000 lines of history in memory
HISTSIZE=100000
# Save 2,000,000 lines of history to disk
SAVEHIST=2000000
# History file
HISTFILE="${HOME}/.zsh_history"

# Ignore specific commands
HISTIGNORE="ls:ll:ls -alh:pwd:clear:history:echo:clear:exit"
# There is no direct HISTIGNORE in Zsh but you can simulate this feature with a hook
zshaddhistory() {
    emulate -L zsh
    local cmd="$1"
    case "$cmd" in
    $HISTIGNORE)
        return 1
        ;;
    *)
        return 0
        ;;
    esac
}

# History command configuration
setopt append_history         # append to history instead of overwrite
setopt hist_expire_dups_first # delete duplicates first when HISTFILE size exceeds HISTSIZE
setopt hist_ignore_dups       # ignore duplicated commands history list
setopt hist_ignore_space      # ignore commands starting with space
setopt hist_verify            # show command with history expansion to user before running it
setopt share_history          # share command history data

# Set time format (Zsh uses `print -P` formatting)
# This will prepend the current timestamp as an EPOCH time to each history entry
setopt extended_history

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"
HIST_STAMPS="%Y-%m-%d %H:%M"
HISTTIMEFORMAT="%F %T "

# Multiple commands on one line show up as a single line
setopt inc_append_history

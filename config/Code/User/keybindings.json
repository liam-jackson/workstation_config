// Place your key bindings in this file to override the defaultsauto[]
[
    {
        "key": "ctrl+k ctrl+shift+d",
        "when": "editorTextFocus",
        "command": "extension.commandvariable.dateTimeInEditor",
        "args": {
            "locale": "en-US",
            "options": {
                "year": "numeric",
                "month": "2-digit",
                "day": "2-digit",
                "hour12": false,
                "hour": "2-digit",
                "minute": "2-digit"
            },
            "template": "${year}_${month}_${day}-${hour}${minute}"
        }
    },
    {
        "key": "ctrl+shift+space",
        "command": "-editor.action.smartSelect.grow",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+k ctrl+0",
        "command": "-editor.unfoldAll",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+k ctrl+t",
        "command": "-workbench.action.selectTheme"
    },
    {
        "key": "ctrl+k ctrl+t",
        "command": "workbench.action.terminal.focus"
    },
    {
        "key": "ctrl+k ctrl+=",
        "command": "-editor.unfoldAllExcept",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+shift+l",
        "command": "-editor.action.insertCursorAtEndOfEachLineSelected",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+alt+l",
        "command": "editor.action.insertCursorAtEndOfEachLineSelected",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+alt+i",
        "command": "-editor.action.insertCursorAtEndOfEachLineSelected",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+d",
        "command": "-editor.action.copyLinesDownAction",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+shift+d",
        "command": "-workbench.view.debug",
        "when": "viewContainer.workbench.view.debug.enabled"
    },
    {
        "key": "shift+alt+f",
        "command": "editor.action.peekDefinition",
        "when": "editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
    },
    {
        "key": "ctrl+shift+f10",
        "command": "-editor.action.peekDefinition",
        "when": "editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
    },
    {
        "key": "ctrl+shift+i",
        "command": "-notebook.format",
        "when": "notebookEditable && !editorTextFocus && activeEditor == 'workbench.editor.notebook'"
    },
    {
        "key": "ctrl+shift+i",
        "command": "-editor.action.formatDocument.none",
        "when": "editorTextFocus && !editorHasDocumentFormattingProvider && !editorReadonly"
    },
    {
        "key": "ctrl+shift+i",
        "command": "-editor.action.formatDocument",
        "when": "editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor"
    },
    {
        "key": "ctrl+shift+i",
        "command": "-notebook.formatCell",
        "when": "editorHasDocumentFormattingProvider && editorTextFocus && inCompositeEditor && notebookEditable && !editorReadonly && activeEditor == 'workbench.editor.notebook'"
    },
    {
        "key": "ctrl+shift+i",
        "command": "-workbench.action.toggleDevTools",
        "when": "isDevelopment"
    },
    {
        "key": "alt+i",
        "command": "editor.action.peekImplementation",
        "when": "editorHasImplementationProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
    },
    {
        "key": "ctrl+shift+f12",
        "command": "-editor.action.peekImplementation",
        "when": "editorHasImplementationProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
    },
    {
        "key": "alt+r",
        "command": "-toggleSearchRegex",
        "when": "searchViewletFocus"
    },
    {
        "key": "alt+r",
        "command": "-toggleFindRegex",
        "when": "editorFocus"
    },
    {
        "key": "alt+r",
        "command": "-workbench.action.terminal.toggleFindRegex",
        "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "alt+r",
        "command": "-toggleSearchEditorRegex",
        "when": "inSearchEditor && searchInputBoxFocus"
    },
    {
        "key": "alt+d",
        "command": "editor.action.peekDeclaration"
    },
    {
        "key": "alt+r",
        "command": "editor.action.referenceSearch.trigger"
    },
    {
        "key": "alt+t",
        "command": "editor.action.peekTypeDefinition"
    },
    {
        "key": "f2",
        "command": "-workbench.action.terminal.renameInstance",
        "when": "terminalHasBeenCreated && terminalTabsFocus && terminalTabsSingularSelection || terminalProcessSupported && terminalTabsFocus && terminalTabsSingularSelection"
    },
    {
        "key": "f2",
        "command": "-debug.renameWatchExpression",
        "when": "watchExpressionsFocused"
    },
    {
        "key": "alt+=",
        "command": "workbench.action.navigateForward",
        "when": "canNavigateForward"
    },
    {
        "key": "shift+alt+-",
        "command": "-workbench.action.navigateForward",
        "when": "canNavigateForward"
    },
    {
        "key": "ctrl+k ctrl+k",
        "command": "-deleteAllRight",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+k ctrl+p",
        "command": "-workbench.action.showAllEditors"
    },
    {
        "key": "ctrl+k ctrl+p",
        "command": "extension.print",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+l",
        "command": "-extension.print",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+enter",
        "command": "-jupyter.runByLineStop",
        "when": "notebookCellResource in 'jupyter.notebookeditor.runByLineCells'"
    },
    {
        "key": "ctrl+alt+p",
        "command": "python.execInTerminal",
        "when": "editorLangId == 'python'"
    },
    {
        "key": "ctrl+k ctrl+v",
        "command": "toggleVim",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+k ctrl+m",
        "command": "workbench.action.toggleEditorWidths"
    },
    {
        "key": "ctrl+alt+right",
        "command": "-cursorWordEndRight",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+alt+right",
        "command": "-cursorWordEndRightSelect",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+alt+left",
        "command": "-cursorWordStartLeft",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+alt+left",
        "command": "-cursorWordStartLeftSelect",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+pagedown",
        "command": "workbench.action.moveEditorToNextGroup"
    },
    {
        "key": "ctrl+alt+right",
        "command": "-workbench.action.moveEditorToNextGroup"
    },
    {
        "key": "ctrl+shift+pageup",
        "command": "workbench.action.moveEditorToPreviousGroup",
        "when": "activeEditorGroupIndex > 1"
    },
    {
        "key": "ctrl+alt+left",
        "command": "-workbench.action.moveEditorToPreviousGroup"
    },
    {
        "key": "shift+alt+,",
        "command": "workbench.action.moveEditorLeftInGroup"
    },
    {
        "key": "shift+alt+.",
        "command": "workbench.action.moveEditorRightInGroup"
    },
    {
        "key": "ctrl+enter",
        "command": "extension.runMatlab",
        "when": "editorLangId == 'matlab'"
    },
    {
        "key": "ctrl+pagedown",
        "command": "workbench.action.focusNextGroup"
    },
    {
        "key": "ctrl+pagedown",
        "command": "-workbench.action.nextEditor"
    },
    {
        "key": "ctrl+pageup",
        "command": "-workbench.action.previousEditor"
    },
    {
        "key": "ctrl+pageup",
        "command": "workbench.action.focusPreviousGroup"
    },
    {
        "key": "shift+alt+s",
        "command": "workbench.action.focusOtherSideEditor"
    },
    {
        "key": "ctrl+k ctrl+-",
        "command": "editor.foldAll",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+k ctrl+0",
        "command": "-editor.foldAll",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+k ctrl+=",
        "command": "editor.unfoldAll",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+k ctrl+j",
        "command": "-editor.unfoldAll",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+k ctrl+.",
        "command": "-editor.removeManualFoldingRanges",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+k ctrl+0",
        "command": "editor.foldAllExcept",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+k ctrl+-",
        "command": "-editor.foldAllExcept",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+k ctrl+shift+]",
        "command": "editor.unfoldRecursively",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+k ctrl+]",
        "command": "-editor.unfoldRecursively",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+k ctrl+shift+[",
        "command": "editor.foldRecursively",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+k ctrl+[",
        "command": "-editor.foldRecursively",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "shift+enter",
        "command": "jupyter.runcurrentcell",
        "when": "editorTextFocus && isWorkspaceTrusted && jupyter.hascodecells && !editorHasSelection && !jupyter.havenativecells && !notebookEditorFocused"
    },
    {
        "key": "ctrl+enter",
        "command": "-jupyter.runcurrentcell",
        "when": "editorTextFocus && isWorkspaceTrusted && jupyter.hascodecells && !editorHasSelection && !jupyter.havenativecells && !notebookEditorFocused"
    },
    {
        "key": "ctrl+shift+enter",
        "command": "jupyter.runcurrentcelladvance",
        "when": "editorTextFocus && isWorkspaceTrusted && jupyter.hascodecells && !editorHasSelection && !notebookEditorFocused"
    },
    {
        "key": "shift+enter",
        "command": "-jupyter.runcurrentcelladvance",
        "when": "editorTextFocus && isWorkspaceTrusted && jupyter.hascodecells && !editorHasSelection && !notebookEditorFocused"
    },
    {
        "key": "ctrl+k ctrl+\\",
        "command": "-workbench.action.splitEditorLeft"
    },
    {
        "key": "ctrl+k ctrl+\\",
        "command": "-workbench.action.splitEditorOrthogonal"
    },
    {
        "key": "ctrl+k ctrl+\\",
        "command": "-workbench.action.splitEditorUp"
    },
    {
        "key": "ctrl+k ctrl+\\",
        "command": "-workbench.action.splitEditorDown"
    },
    {
        "key": "ctrl+k ctrl+.",
        "command": "easySnippet.run",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+k ctrl+shift+s",
        "command": "-easySnippet.run",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+/",
        "command": "editor.action.commentLine",
        "when": "editorTextFocus && !editorReadonly && !suggestWidgetVisible"
    },
    {
        "key": "ctrl+/",
        "command": "-editor.action.commentLine",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+j",
        "command": "editor.action.joinLines",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+j",
        "command": "-editor.action.joinLines",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+d",
        "command": "editor.action.moveSelectionToPreviousFindMatch"
    },
    {
        "key": "ctrl+shift+alt+d",
        "command": "editor.action.addSelectionToPreviousFindMatch",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+k ctrl+c",
        "command": "-editor.action.addCommentLine",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+k ctrl+w",
        "command": "-workbench.action.closeAllEditors"
    },
    {
        "key": "ctrl+k ctrl+shift+w",
        "command": "-workbench.action.closeAllGroups"
    },
    {
        "key": "ctrl+k ctrl+w",
        "command": "editor.action.trimTrailingWhitespace",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+k ctrl+x",
        "command": "-editor.action.trimTrailingWhitespace",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+k ctrl+x",
        "command": "notebook.cell.collapseCellOutput",
        "when": "notebookCellHasOutputs && notebookCellListFocused && !inputFocus && !notebookCellOutputIsCollapsed"
    },
    {
        "key": "ctrl+k t",
        "command": "-notebook.cell.collapseCellOutput",
        "when": "notebookCellHasOutputs && notebookCellListFocused && !inputFocus && !notebookCellOutputIsCollapsed"
    },
    {
        "key": "ctrl+k ctrl+x",
        "command": "notebook.cell.expandCellOutput",
        "when": "notebookCellListFocused && notebookCellOutputIsCollapsed"
    },
    {
        "key": "ctrl+k t",
        "command": "-notebook.cell.expandCellOutput",
        "when": "notebookCellListFocused && notebookCellOutputIsCollapsed"
    },
    {
        "key": "ctrl+k ctrl+m",
        "command": "workbench.action.toggleMaximizedPanel",
        "when": "panelFocus"
    },
    {
        "key": "ctrl+shift+t",
        "command": "test-explorer.focus",
        "when": "testing.activeEditorHasTests"
    },
    {
        "key": "ctrl+shift+t",
        "command": "workbench.action.reopenClosedEditor",
        "when": "!testing.activeEditorHasTests && canReopenClosedEditor"
    },
    {
        "key": "ctrl+shift+t",
        "command": "-workbench.action.reopenClosedEditor"
    },
    {
        "key": "ctrl+shift+`",
        "command": "workbench.action.terminal.newWithCwd",
        "args": {
            "cwd": "${fileDirname}"
        }
    },
    {
        "key": "ctrl+shift+`",
        "command": "-workbench.action.terminal.new",
        "when": "terminalProcessSupported || terminalWebExtensionContributedProfile"
    },
    {
        "key": "alt+c alt+p",
        "command": "workbench.panel.chat.view.copilot.focus",
        "when": "github.copilot.activated"
    },
    {
        "key": "ctrl+alt+p",
        "command": "python.execInTerminal-icon",
        "when": "editorLangId=='python'"
    },
    {
        "key": "ctrl+shift+pageup",
        "command": "workbench.action.moveEditorToLeftGroup",
        "when": "!(activeEditorIsFirstInGroup && activeEditorIsLastInGroup) && activeEditorGroupIndex == 1"
    },
    {
        "key": "ctrl+p",
        "command": "workbench.action.focusQuickOpen",
        "when": "!inQuickOpen"
    },
    {
        "key": "alt+f",
        "command": "workbench.action.quickOpen",
        "when": "!inQuickOpen"
    },
    {
        "key": "ctrl+p",
        "command": "-workbench.action.quickOpen"
    },
    {
        "key": "ctrl+p",
        "command": "-workbench.action.quickOpenPreviousEditor"
    },
    {
        "key": "ctrl+k c",
        "command": "-workbench.files.action.compareWithClipboard"
    },
    {
        "key": "ctrl+shift+.",
        "command": "-editor.action.accessibleViewGoToSymbol",
        "when": "accessibilityHelpIsShown && accessibleViewGoToSymbolSupported || accessibleViewGoToSymbolSupported && accessibleViewIsShown"
    },
    {
        "key": "ctrl+shift+.",
        "command": "-editor.action.inPlaceReplace.down",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+.",
        "command": "-breadcrumbs.toggleToOn",
        "when": "!config.breadcrumbs.enabled"
    },
    {
        "key": "ctrl+shift+.",
        "command": "-breadcrumbs.focusAndSelect",
        "when": "breadcrumbsPossible && breadcrumbsVisible"
    },
    {
        "key": "ctrl+shift+,",
        "command": "-editor.action.inPlaceReplace.up",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "alt+p",
        "command": "git.stageSelectedRanges",
        "when": "isInDiffEditor && !operationInProgress"
    },
    {
        "key": "ctrl+k ctrl+alt+s",
        "command": "-git.stageSelectedRanges",
        "when": "isInDiffEditor && !operationInProgress"
    },
    {
        "key": "alt+;",
        "command": "git.unstageSelectedRanges",
        "when": "isInDiffEditor && !operationInProgress"
    },
    {
        "key": "ctrl+k ctrl+n",
        "command": "-git.unstageSelectedRanges",
        "when": "isInDiffEditor && !operationInProgress"
    },
    {
        "key": "ctrl+shift+/",
        "command": "-editor.action.commentLine",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+/",
        "command": "-editor.action.blockComment",
        "when": "editorFocus"
    },
    {
        "key": "alt+f3",
        "command": "-editor.action.dirtydiff.next",
        "when": "editorTextFocus && !textCompareEditorActive"
    },
    {
        "key": "alt+l",
        "command": "workbench.action.compareEditor.previousChange",
        "when": "textCompareEditorVisible"
    },
    {
        "key": "shift+alt+f5",
        "command": "-workbench.action.compareEditor.previousChange",
        "when": "textCompareEditorVisible"
    },
    {
        "key": "alt+'",
        "command": "workbench.action.compareEditor.nextChange",
        "when": "textCompareEditorVisible"
    },
    {
        "key": "alt+f5",
        "command": "-workbench.action.compareEditor.nextChange",
        "when": "textCompareEditorVisible"
    },
    {
        "key": "f5",
        "command": "python.debugInTerminal",
        "when": "debuggersAvailable && debugState == 'inactive'"
    },
    {
        "key": "alt+j",
        "command": "showNextParameterHint",
        "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
    },
    {
        "key": "alt+down",
        "command": "-showNextParameterHint",
        "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
    },
    {
        "key": "alt+k",
        "command": "showPrevParameterHint",
        "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
    },
    {
        "key": "alt+up",
        "command": "-showPrevParameterHint",
        "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
    },
    {
        "key": "ctrl+l",
        "command": "keybindings.editor.clearSearchResults",
        "when": "inKeybindings && inKeybindingsSearch"
    },
    {
        "key": "escape",
        "command": "-keybindings.editor.clearSearchResults",
        "when": "inKeybindings && inKeybindingsSearch"
    },
    {
        "key": "ctrl+k ctrl+r",
        "command": "deleteAllRight"
    },
    {
        "key": "alt+-",
        "command": "workbench.action.navigateBackInEditLocations",
        "when": "canNavigateBackInEditLocations"
    },
    {
        "key": "alt+=",
        "command": "workbench.action.navigateForwardInEditLocations",
        "when": "canNavigateForwardInEditLocations"
    }
]
